/* Plugin Template generated by Pawn Studio */
#pragma newdecls required
#pragma semicolon 1

#include <sourcemod>
#include <sdkhooks>

/*
* Version 1.0
* - Blocks Damage to CI from SI (Except Tank)
*
* Version 1.1
* - Added CVar that controls how many hits common need to die. (Default is L4D1 Style - 5 Scratches/Punches)
* - Added a check for common health in case a CFG adjusts it.
*/

static const char CLASSNAME_INFECTED[] = "infected";

// In case a CFG uses a different Common Health, adjust to it.
ConVar g_cvHealth;
int    g_iHealth;

// Cvar to determine how many hits would cause the common to die.
ConVar g_cvDamage;
int    g_iDamage;

public Plugin myinfo = {
    name        = "SI - CI FF Block",
    author      = "Sir",
    description = "Modifies FF from SI (Except Tank) to CI",
    version     = "1.1",
    url         = "https://github.com/SirPlease/SirCoding"
}

public void OnPluginStart() {
    // Cvars.
    g_cvHealth = FindConVar("z_health");
    g_iHealth  = g_cvHealth.IntValue;
    g_cvHealth.AddChangeHook(ConVarChanged_Health);

    g_cvDamage = CreateConVar(
    "common_hits", "5",
    "Hits needed from SI before a common dies - 0 = Block FF, 5 = L4D1 Style (5Hits)",
    FCVAR_NONE, true, 0.0, false, 5.0);
    g_iDamage = g_cvDamage.IntValue;
    g_cvDamage.AddChangeHook(ConVarChanged_Damage);
}

void ConVarChanged_Health(ConVar cv, const char[] szOldVal, const char[] szNewVal) {
    g_iHealth = g_cvHealth.IntValue;
}

void ConVarChanged_Damage(ConVar cv, const char[] szOldVal, const char[] szNewVal) {
    g_iDamage = g_cvDamage.IntValue;
}

public void OnEntityCreated(int iEnt, const char[] szClsName) {
    if (strcmp(szClsName, CLASSNAME_INFECTED) != 0)
        return;
    // Hook Common Infected
    SDKHook(iEnt, SDKHook_OnTakeDamage, OnTakeDamage);
}

public Action OnTakeDamage(int iVictim, int &iAttacker, int &iInflictor, float &fDamage, int &iDamageType) {
    // Check if Damage has to be corrected - Intensively tested on both 30, 60 and 100 Tick. Server performance does not decrease.
    if (iAttacker <= 0)             return Plugin_Continue;
    if (iAttacker > MaxClients)     return Plugin_Continue;
    if (!IsClientInGame(iAttacker)) return Plugin_Continue;

    if (GetClientTeam(iAttacker) == 3 && !IsTank(iAttacker)) {
        if (g_iDamage) {
            fDamage = float(RoundToCeil(float(g_iHealth) / float(g_iDamage)));
            return Plugin_Changed;
        }
        return Plugin_Handled;
    }

    return Plugin_Continue;
}

stock bool IsTank(int iClient) {
    return GetEntProp(iClient, Prop_Send, "m_zombieClass") == 8;
}